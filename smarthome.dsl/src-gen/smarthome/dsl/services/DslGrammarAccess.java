/*
 * generated by Xtext 2.14.0
 */
package smarthome.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class HomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Home");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHomeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHomeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEventFileKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFileEventsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFileEventsEStringParserRuleCall_3_1_0 = (RuleCall)cFileEventsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRoomsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRoomsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRoomsRoomParserRuleCall_4_2_0 = (RuleCall)cRoomsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cRoomsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cRoomsRoomParserRuleCall_4_3_1_0 = (RuleCall)cRoomsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPersonsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPersonsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPersonsPersonParserRuleCall_5_2_0 = (RuleCall)cPersonsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPersonsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cPersonsPersonParserRuleCall_5_3_1_0 = (RuleCall)cPersonsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPatternsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cPatternsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cPatternsPatternParserRuleCall_6_2_0 = (RuleCall)cPatternsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cPatternsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cPatternsPatternParserRuleCall_6_3_1_0 = (RuleCall)cPatternsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMonitorKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMonitoredEntitiesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cMonitoredEntitiesNamedEntityCrossReference_7_1_0 = (CrossReference)cMonitoredEntitiesAssignment_7_1.eContents().get(0);
		private final RuleCall cMonitoredEntitiesNamedEntityEStringParserRuleCall_7_1_0_1 = (RuleCall)cMonitoredEntitiesNamedEntityCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cMonitoredEntitiesAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final CrossReference cMonitoredEntitiesNamedEntityCrossReference_7_2_1_0 = (CrossReference)cMonitoredEntitiesAssignment_7_2_1.eContents().get(0);
		private final RuleCall cMonitoredEntitiesNamedEntityEStringParserRuleCall_7_2_1_0_1 = (RuleCall)cMonitoredEntitiesNamedEntityCrossReference_7_2_1_0.eContents().get(1);
		private final Keyword cStartKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Home:
		//	{Home}
		//	'Home'
		//	'{' ('eventFile' fileEvents=EString) ('rooms' '{' rooms+=Room ("," rooms+=Room)* '}')? ('persons' '{' persons+=Person
		//	("," persons+=Person)* '}')? ('patterns' '{' patterns+=Pattern ("," patterns+=Pattern)* '}')? ('monitor'
		//	monitoredEntities+=[NamedEntity|EString] ("," monitoredEntities+=[NamedEntity|EString])*)?
		//	'start' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Home} 'Home' '{' ('eventFile' fileEvents=EString) ('rooms' '{' rooms+=Room ("," rooms+=Room)* '}')? ('persons' '{'
		//persons+=Person ("," persons+=Person)* '}')? ('patterns' '{' patterns+=Pattern ("," patterns+=Pattern)* '}')?
		//('monitor' monitoredEntities+=[NamedEntity|EString] ("," monitoredEntities+=[NamedEntity|EString])*)? 'start' '}'
		public Group getGroup() { return cGroup; }
		
		//{Home}
		public Action getHomeAction_0() { return cHomeAction_0; }
		
		//'Home'
		public Keyword getHomeKeyword_1() { return cHomeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'eventFile' fileEvents=EString
		public Group getGroup_3() { return cGroup_3; }
		
		//'eventFile'
		public Keyword getEventFileKeyword_3_0() { return cEventFileKeyword_3_0; }
		
		//fileEvents=EString
		public Assignment getFileEventsAssignment_3_1() { return cFileEventsAssignment_3_1; }
		
		//EString
		public RuleCall getFileEventsEStringParserRuleCall_3_1_0() { return cFileEventsEStringParserRuleCall_3_1_0; }
		
		//('rooms' '{' rooms+=Room ("," rooms+=Room)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'rooms'
		public Keyword getRoomsKeyword_4_0() { return cRoomsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//rooms+=Room
		public Assignment getRoomsAssignment_4_2() { return cRoomsAssignment_4_2; }
		
		//Room
		public RuleCall getRoomsRoomParserRuleCall_4_2_0() { return cRoomsRoomParserRuleCall_4_2_0; }
		
		//("," rooms+=Room)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//rooms+=Room
		public Assignment getRoomsAssignment_4_3_1() { return cRoomsAssignment_4_3_1; }
		
		//Room
		public RuleCall getRoomsRoomParserRuleCall_4_3_1_0() { return cRoomsRoomParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('persons' '{' persons+=Person ("," persons+=Person)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'persons'
		public Keyword getPersonsKeyword_5_0() { return cPersonsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//persons+=Person
		public Assignment getPersonsAssignment_5_2() { return cPersonsAssignment_5_2; }
		
		//Person
		public RuleCall getPersonsPersonParserRuleCall_5_2_0() { return cPersonsPersonParserRuleCall_5_2_0; }
		
		//("," persons+=Person)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//persons+=Person
		public Assignment getPersonsAssignment_5_3_1() { return cPersonsAssignment_5_3_1; }
		
		//Person
		public RuleCall getPersonsPersonParserRuleCall_5_3_1_0() { return cPersonsPersonParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('patterns' '{' patterns+=Pattern ("," patterns+=Pattern)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'patterns'
		public Keyword getPatternsKeyword_6_0() { return cPatternsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//patterns+=Pattern
		public Assignment getPatternsAssignment_6_2() { return cPatternsAssignment_6_2; }
		
		//Pattern
		public RuleCall getPatternsPatternParserRuleCall_6_2_0() { return cPatternsPatternParserRuleCall_6_2_0; }
		
		//("," patterns+=Pattern)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//patterns+=Pattern
		public Assignment getPatternsAssignment_6_3_1() { return cPatternsAssignment_6_3_1; }
		
		//Pattern
		public RuleCall getPatternsPatternParserRuleCall_6_3_1_0() { return cPatternsPatternParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('monitor' monitoredEntities+=[NamedEntity|EString] ("," monitoredEntities+=[NamedEntity|EString])*)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'monitor'
		public Keyword getMonitorKeyword_7_0() { return cMonitorKeyword_7_0; }
		
		//monitoredEntities+=[NamedEntity|EString]
		public Assignment getMonitoredEntitiesAssignment_7_1() { return cMonitoredEntitiesAssignment_7_1; }
		
		//[NamedEntity|EString]
		public CrossReference getMonitoredEntitiesNamedEntityCrossReference_7_1_0() { return cMonitoredEntitiesNamedEntityCrossReference_7_1_0; }
		
		//EString
		public RuleCall getMonitoredEntitiesNamedEntityEStringParserRuleCall_7_1_0_1() { return cMonitoredEntitiesNamedEntityEStringParserRuleCall_7_1_0_1; }
		
		//("," monitoredEntities+=[NamedEntity|EString])*
		public Group getGroup_7_2() { return cGroup_7_2; }
		
		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }
		
		//monitoredEntities+=[NamedEntity|EString]
		public Assignment getMonitoredEntitiesAssignment_7_2_1() { return cMonitoredEntitiesAssignment_7_2_1; }
		
		//[NamedEntity|EString]
		public CrossReference getMonitoredEntitiesNamedEntityCrossReference_7_2_1_0() { return cMonitoredEntitiesNamedEntityCrossReference_7_2_1_0; }
		
		//EString
		public RuleCall getMonitoredEntitiesNamedEntityEStringParserRuleCall_7_2_1_0_1() { return cMonitoredEntitiesNamedEntityEStringParserRuleCall_7_2_1_0_1; }
		
		//'start'
		public Keyword getStartKeyword_8() { return cStartKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Sensor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAnalogSensorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDigitalSensorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Sensor:
		//	AnalogSensor | DigitalSensor;
		@Override public ParserRule getRule() { return rule; }
		
		//AnalogSensor | DigitalSensor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AnalogSensor
		public RuleCall getAnalogSensorParserRuleCall_0() { return cAnalogSensorParserRuleCall_0; }
		
		//DigitalSensor
		public RuleCall getDigitalSensorParserRuleCall_1() { return cDigitalSensorParserRuleCall_1; }
	}
	public class PredicateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Predicate");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSensorPredicateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPersonPredicateParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Predicate:
		//	SensorPredicate | PersonPredicate;
		@Override public ParserRule getRule() { return rule; }
		
		//SensorPredicate | PersonPredicate
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SensorPredicate
		public RuleCall getSensorPredicateParserRuleCall_0() { return cSensorPredicateParserRuleCall_0; }
		
		//PersonPredicate
		public RuleCall getPersonPredicateParserRuleCall_1() { return cPersonPredicateParserRuleCall_1; }
	}
	public class RoomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Room");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRoomAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRoomKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cSensorsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cSensorsSensorParserRuleCall_4_0_0 = (RuleCall)cSensorsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cSensorsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cSensorsSensorParserRuleCall_4_1_1_0 = (RuleCall)cSensorsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Room:
		//	{Room}
		//	'Room'
		//	name=EString
		//	'{' (sensors+=Sensor ("," sensors+=Sensor)*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Room} 'Room' name=EString '{' (sensors+=Sensor ("," sensors+=Sensor)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Room}
		public Action getRoomAction_0() { return cRoomAction_0; }
		
		//'Room'
		public Keyword getRoomKeyword_1() { return cRoomKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(sensors+=Sensor ("," sensors+=Sensor)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//sensors+=Sensor
		public Assignment getSensorsAssignment_4_0() { return cSensorsAssignment_4_0; }
		
		//Sensor
		public RuleCall getSensorsSensorParserRuleCall_4_0_0() { return cSensorsSensorParserRuleCall_4_0_0; }
		
		//("," sensors+=Sensor)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//sensors+=Sensor
		public Assignment getSensorsAssignment_4_1_1() { return cSensorsAssignment_4_1_1; }
		
		//Sensor
		public RuleCall getSensorsSensorParserRuleCall_4_1_1_0() { return cSensorsSensorParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Person");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPersonAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPersonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftAnkleKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAnkleLeftAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnkleLeftTagParserRuleCall_5_0 = (RuleCall)cAnkleLeftAssignment_5.eContents().get(0);
		private final Keyword cRightAnkleKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cAnkleRightAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAnkleRightTagParserRuleCall_7_0 = (RuleCall)cAnkleRightAssignment_7.eContents().get(0);
		private final Keyword cBeltKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cBeltAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBeltTagParserRuleCall_9_0 = (RuleCall)cBeltAssignment_9.eContents().get(0);
		private final Keyword cChestKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cChestAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cChestTagParserRuleCall_11_0 = (RuleCall)cChestAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Person:
		//	{Person}
		//	'Person'
		//	name=EString
		//	'{'
		//	'left-ankle' ankleLeft=Tag
		//	'right-ankle' ankleRight=Tag
		//	'belt' belt=Tag
		//	'chest' chest=Tag
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Person} 'Person' name=EString '{' 'left-ankle' ankleLeft=Tag 'right-ankle' ankleRight=Tag 'belt' belt=Tag 'chest'
		//chest=Tag '}'
		public Group getGroup() { return cGroup; }
		
		//{Person}
		public Action getPersonAction_0() { return cPersonAction_0; }
		
		//'Person'
		public Keyword getPersonKeyword_1() { return cPersonKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'left-ankle'
		public Keyword getLeftAnkleKeyword_4() { return cLeftAnkleKeyword_4; }
		
		//ankleLeft=Tag
		public Assignment getAnkleLeftAssignment_5() { return cAnkleLeftAssignment_5; }
		
		//Tag
		public RuleCall getAnkleLeftTagParserRuleCall_5_0() { return cAnkleLeftTagParserRuleCall_5_0; }
		
		//'right-ankle'
		public Keyword getRightAnkleKeyword_6() { return cRightAnkleKeyword_6; }
		
		//ankleRight=Tag
		public Assignment getAnkleRightAssignment_7() { return cAnkleRightAssignment_7; }
		
		//Tag
		public RuleCall getAnkleRightTagParserRuleCall_7_0() { return cAnkleRightTagParserRuleCall_7_0; }
		
		//'belt'
		public Keyword getBeltKeyword_8() { return cBeltKeyword_8; }
		
		//belt=Tag
		public Assignment getBeltAssignment_9() { return cBeltAssignment_9; }
		
		//Tag
		public RuleCall getBeltTagParserRuleCall_9_0() { return cBeltTagParserRuleCall_9_0; }
		
		//'chest'
		public Keyword getChestKeyword_10() { return cChestKeyword_10; }
		
		//chest=Tag
		public Assignment getChestAssignment_11() { return cChestAssignment_11; }
		
		//Tag
		public RuleCall getChestTagParserRuleCall_11_0() { return cChestTagParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class TagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Tag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTagAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIDKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Tag:
		//	{Tag}
		//	'ID'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Tag} 'ID' name=EString
		public Group getGroup() { return cGroup; }
		
		//{Tag}
		public Action getTagAction_0() { return cTagAction_0; }
		
		//'ID'
		public Keyword getIDKeyword_1() { return cIDKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class PatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Pattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPatternAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPatternKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cRulesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cRulesRuleParserRuleCall_4_0_0 = (RuleCall)cRulesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cRulesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cRulesRuleParserRuleCall_4_1_1_0 = (RuleCall)cRulesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Pattern:
		//	{Pattern}
		//	'Pattern'
		//	name=EString
		//	'{' (rules+=Rule ("," rules+=Rule)*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Pattern} 'Pattern' name=EString '{' (rules+=Rule ("," rules+=Rule)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Pattern}
		public Action getPatternAction_0() { return cPatternAction_0; }
		
		//'Pattern'
		public Keyword getPatternKeyword_1() { return cPatternKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(rules+=Rule ("," rules+=Rule)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//rules+=Rule
		public Assignment getRulesAssignment_4_0() { return cRulesAssignment_4_0; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_4_0_0() { return cRulesRuleParserRuleCall_4_0_0; }
		
		//("," rules+=Rule)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//rules+=Rule
		public Assignment getRulesAssignment_4_1_1() { return cRulesAssignment_4_1_1; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_4_1_1_0() { return cRulesRuleParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class AnalogSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.AnalogSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnalogSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnalogSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//AnalogSensor:
		//	{AnalogSensor}
		//	'AnalogSensor'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{AnalogSensor} 'AnalogSensor' name=EString
		public Group getGroup() { return cGroup; }
		
		//{AnalogSensor}
		public Action getAnalogSensorAction_0() { return cAnalogSensorAction_0; }
		
		//'AnalogSensor'
		public Keyword getAnalogSensorKeyword_1() { return cAnalogSensorKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class DigitalSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.DigitalSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDigitalSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDigitalSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//DigitalSensor:
		//	{DigitalSensor}
		//	'DigitalSensor'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{DigitalSensor} 'DigitalSensor' name=EString
		public Group getGroup() { return cGroup; }
		
		//{DigitalSensor}
		public Action getDigitalSensorAction_0() { return cDigitalSensorAction_0; }
		
		//'DigitalSensor'
		public Keyword getDigitalSensorKeyword_1() { return cDigitalSensorKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPredicatesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPredicatesPredicateParserRuleCall_2_1_0 = (RuleCall)cPredicatesAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cAndKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cPredicatesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cPredicatesPredicateParserRuleCall_2_2_1_0 = (RuleCall)cPredicatesAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Keyword cForKeyword_3_0_0 = (Keyword)cAlternatives_3_0.eContents().get(0);
		private final Keyword cSinceKeyword_3_0_1 = (Keyword)cAlternatives_3_0.eContents().get(1);
		private final Assignment cDurationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDurationDurationParserRuleCall_3_1_0 = (RuleCall)cDurationAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Rule:
		//	{Rule}
		//	'{' ('(' predicates+=Predicate ("and" predicates+=Predicate)* ')')? (('for' | 'since') duration=Duration)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Rule} '{' ('(' predicates+=Predicate ("and" predicates+=Predicate)* ')')? (('for' | 'since') duration=Duration)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Rule}
		public Action getRuleAction_0() { return cRuleAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('(' predicates+=Predicate ("and" predicates+=Predicate)* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//predicates+=Predicate
		public Assignment getPredicatesAssignment_2_1() { return cPredicatesAssignment_2_1; }
		
		//Predicate
		public RuleCall getPredicatesPredicateParserRuleCall_2_1_0() { return cPredicatesPredicateParserRuleCall_2_1_0; }
		
		//("and" predicates+=Predicate)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//"and"
		public Keyword getAndKeyword_2_2_0() { return cAndKeyword_2_2_0; }
		
		//predicates+=Predicate
		public Assignment getPredicatesAssignment_2_2_1() { return cPredicatesAssignment_2_2_1; }
		
		//Predicate
		public RuleCall getPredicatesPredicateParserRuleCall_2_2_1_0() { return cPredicatesPredicateParserRuleCall_2_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//(('for' | 'since') duration=Duration)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'for' | 'since'
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }
		
		//'for'
		public Keyword getForKeyword_3_0_0() { return cForKeyword_3_0_0; }
		
		//'since'
		public Keyword getSinceKeyword_3_0_1() { return cSinceKeyword_3_0_1; }
		
		//duration=Duration
		public Assignment getDurationAssignment_3_1() { return cDurationAssignment_3_1; }
		
		//Duration
		public RuleCall getDurationDurationParserRuleCall_3_1_0() { return cDurationDurationParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class DurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Duration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTimeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTimeEIntParserRuleCall_1_0 = (RuleCall)cTimeAssignment_1.eContents().get(0);
		private final Assignment cPrecisionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPrecisionPrecisionEnumRuleCall_2_0 = (RuleCall)cPrecisionAssignment_2.eContents().get(0);
		
		//Duration:
		//	{Duration} time=EInt precision=Precision;
		@Override public ParserRule getRule() { return rule; }
		
		//{Duration} time=EInt precision=Precision
		public Group getGroup() { return cGroup; }
		
		//{Duration}
		public Action getDurationAction_0() { return cDurationAction_0; }
		
		//time=EInt
		public Assignment getTimeAssignment_1() { return cTimeAssignment_1; }
		
		//EInt
		public RuleCall getTimeEIntParserRuleCall_1_0() { return cTimeEIntParserRuleCall_1_0; }
		
		//precision=Precision
		public Assignment getPrecisionAssignment_2() { return cPrecisionAssignment_2; }
		
		//Precision
		public RuleCall getPrecisionPrecisionEnumRuleCall_2_0() { return cPrecisionPrecisionEnumRuleCall_2_0; }
	}
	public class SensorPredicateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.SensorPredicate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSensorPredicateAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cSensorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSensorSensorCrossReference_1_0 = (CrossReference)cSensorAssignment_1.eContents().get(0);
		private final RuleCall cSensorSensorEStringParserRuleCall_1_0_1 = (RuleCall)cSensorSensorCrossReference_1_0.eContents().get(1);
		private final Assignment cOperatorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperatorOperatorEnumRuleCall_2_0 = (RuleCall)cOperatorAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEDoubleParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//SensorPredicate:
		//	{SensorPredicate} sensor=[Sensor|EString] operator=Operator value=EDouble;
		@Override public ParserRule getRule() { return rule; }
		
		//{SensorPredicate} sensor=[Sensor|EString] operator=Operator value=EDouble
		public Group getGroup() { return cGroup; }
		
		//{SensorPredicate}
		public Action getSensorPredicateAction_0() { return cSensorPredicateAction_0; }
		
		//sensor=[Sensor|EString]
		public Assignment getSensorAssignment_1() { return cSensorAssignment_1; }
		
		//[Sensor|EString]
		public CrossReference getSensorSensorCrossReference_1_0() { return cSensorSensorCrossReference_1_0; }
		
		//EString
		public RuleCall getSensorSensorEStringParserRuleCall_1_0_1() { return cSensorSensorEStringParserRuleCall_1_0_1; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_2() { return cOperatorAssignment_2; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_2_0() { return cOperatorOperatorEnumRuleCall_2_0; }
		
		//value=EDouble
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_3_0() { return cValueEDoubleParserRuleCall_3_0; }
	}
	public class PersonPredicateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.PersonPredicate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPersonPredicateAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPersonAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPersonPersonCrossReference_1_0 = (CrossReference)cPersonAssignment_1.eContents().get(0);
		private final RuleCall cPersonPersonEStringParserRuleCall_1_0_1 = (RuleCall)cPersonPersonCrossReference_1_0.eContents().get(1);
		private final Keyword cIsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActivityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActivityActivityEnumRuleCall_3_0 = (RuleCall)cActivityAssignment_3.eContents().get(0);
		
		//PersonPredicate:
		//	{PersonPredicate} person=[Person|EString] 'is' activity=Activity;
		@Override public ParserRule getRule() { return rule; }
		
		//{PersonPredicate} person=[Person|EString] 'is' activity=Activity
		public Group getGroup() { return cGroup; }
		
		//{PersonPredicate}
		public Action getPersonPredicateAction_0() { return cPersonPredicateAction_0; }
		
		//person=[Person|EString]
		public Assignment getPersonAssignment_1() { return cPersonAssignment_1; }
		
		//[Person|EString]
		public CrossReference getPersonPersonCrossReference_1_0() { return cPersonPersonCrossReference_1_0; }
		
		//EString
		public RuleCall getPersonPersonEStringParserRuleCall_1_0_1() { return cPersonPersonEStringParserRuleCall_1_0_1; }
		
		//'is'
		public Keyword getIsKeyword_2() { return cIsKeyword_2; }
		
		//activity=Activity
		public Assignment getActivityAssignment_3() { return cActivityAssignment_3; }
		
		//Activity
		public RuleCall getActivityActivityEnumRuleCall_3_0() { return cActivityActivityEnumRuleCall_3_0; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	public class OperatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSuperiorEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSuperiorGreaterThanSignKeyword_0_0 = (Keyword)cSuperiorEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cInferiorEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cInferiorLessThanSignKeyword_1_0 = (Keyword)cInferiorEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEqualEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEqualEqualsSignKeyword_2_0 = (Keyword)cEqualEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Operator:
		//	superior='>' | inferior='<' | equal='=';
		public EnumRule getRule() { return rule; }
		
		//superior='>' | inferior='<' | equal='='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//superior='>'
		public EnumLiteralDeclaration getSuperiorEnumLiteralDeclaration_0() { return cSuperiorEnumLiteralDeclaration_0; }
		
		//'>'
		public Keyword getSuperiorGreaterThanSignKeyword_0_0() { return cSuperiorGreaterThanSignKeyword_0_0; }
		
		//inferior='<'
		public EnumLiteralDeclaration getInferiorEnumLiteralDeclaration_1() { return cInferiorEnumLiteralDeclaration_1; }
		
		//'<'
		public Keyword getInferiorLessThanSignKeyword_1_0() { return cInferiorLessThanSignKeyword_1_0; }
		
		//equal='='
		public EnumLiteralDeclaration getEqualEnumLiteralDeclaration_2() { return cEqualEnumLiteralDeclaration_2; }
		
		//'='
		public Keyword getEqualEqualsSignKeyword_2_0() { return cEqualEqualsSignKeyword_2_0; }
	}
	public class ActivityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Activity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStandingEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStandingStandingKeyword_0_0 = (Keyword)cStandingEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLayingEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLayingLayingKeyword_1_0 = (Keyword)cLayingEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSittingEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSittingSittingKeyword_2_0 = (Keyword)cSittingEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Activity:
		//	standing | laying | sitting;
		public EnumRule getRule() { return rule; }
		
		//standing | laying | sitting
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//standing
		public EnumLiteralDeclaration getStandingEnumLiteralDeclaration_0() { return cStandingEnumLiteralDeclaration_0; }
		
		//'standing'
		public Keyword getStandingStandingKeyword_0_0() { return cStandingStandingKeyword_0_0; }
		
		//laying
		public EnumLiteralDeclaration getLayingEnumLiteralDeclaration_1() { return cLayingEnumLiteralDeclaration_1; }
		
		//'laying'
		public Keyword getLayingLayingKeyword_1_0() { return cLayingLayingKeyword_1_0; }
		
		//sitting
		public EnumLiteralDeclaration getSittingEnumLiteralDeclaration_2() { return cSittingEnumLiteralDeclaration_2; }
		
		//'sitting'
		public Keyword getSittingSittingKeyword_2_0() { return cSittingSittingKeyword_2_0; }
	}
	public class PrecisionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Precision");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMsMillisKeyword_0_0 = (Keyword)cMsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSSecondsKeyword_1_0 = (Keyword)cSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMMinutesKeyword_2_0 = (Keyword)cMEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Precision:
		//	ms='millis' | s='seconds' | m='minutes';
		public EnumRule getRule() { return rule; }
		
		//ms='millis' | s='seconds' | m='minutes'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ms='millis'
		public EnumLiteralDeclaration getMsEnumLiteralDeclaration_0() { return cMsEnumLiteralDeclaration_0; }
		
		//'millis'
		public Keyword getMsMillisKeyword_0_0() { return cMsMillisKeyword_0_0; }
		
		//s='seconds'
		public EnumLiteralDeclaration getSEnumLiteralDeclaration_1() { return cSEnumLiteralDeclaration_1; }
		
		//'seconds'
		public Keyword getSSecondsKeyword_1_0() { return cSSecondsKeyword_1_0; }
		
		//m='minutes'
		public EnumLiteralDeclaration getMEnumLiteralDeclaration_2() { return cMEnumLiteralDeclaration_2; }
		
		//'minutes'
		public Keyword getMMinutesKeyword_2_0() { return cMMinutesKeyword_2_0; }
	}
	
	private final HomeElements pHome;
	private final SensorElements pSensor;
	private final PredicateElements pPredicate;
	private final RoomElements pRoom;
	private final PersonElements pPerson;
	private final TagElements pTag;
	private final PatternElements pPattern;
	private final EStringElements pEString;
	private final AnalogSensorElements pAnalogSensor;
	private final DigitalSensorElements pDigitalSensor;
	private final EDoubleElements pEDouble;
	private final RuleElements pRule;
	private final DurationElements pDuration;
	private final SensorPredicateElements pSensorPredicate;
	private final PersonPredicateElements pPersonPredicate;
	private final OperatorElements eOperator;
	private final ActivityElements eActivity;
	private final EIntElements pEInt;
	private final PrecisionElements ePrecision;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pHome = new HomeElements();
		this.pSensor = new SensorElements();
		this.pPredicate = new PredicateElements();
		this.pRoom = new RoomElements();
		this.pPerson = new PersonElements();
		this.pTag = new TagElements();
		this.pPattern = new PatternElements();
		this.pEString = new EStringElements();
		this.pAnalogSensor = new AnalogSensorElements();
		this.pDigitalSensor = new DigitalSensorElements();
		this.pEDouble = new EDoubleElements();
		this.pRule = new RuleElements();
		this.pDuration = new DurationElements();
		this.pSensorPredicate = new SensorPredicateElements();
		this.pPersonPredicate = new PersonPredicateElements();
		this.eOperator = new OperatorElements();
		this.eActivity = new ActivityElements();
		this.pEInt = new EIntElements();
		this.ePrecision = new PrecisionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("smarthome.dsl.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Home:
	//	{Home}
	//	'Home'
	//	'{' ('eventFile' fileEvents=EString) ('rooms' '{' rooms+=Room ("," rooms+=Room)* '}')? ('persons' '{' persons+=Person
	//	("," persons+=Person)* '}')? ('patterns' '{' patterns+=Pattern ("," patterns+=Pattern)* '}')? ('monitor'
	//	monitoredEntities+=[NamedEntity|EString] ("," monitoredEntities+=[NamedEntity|EString])*)?
	//	'start' '}';
	public HomeElements getHomeAccess() {
		return pHome;
	}
	
	public ParserRule getHomeRule() {
		return getHomeAccess().getRule();
	}
	
	//Sensor:
	//	AnalogSensor | DigitalSensor;
	public SensorElements getSensorAccess() {
		return pSensor;
	}
	
	public ParserRule getSensorRule() {
		return getSensorAccess().getRule();
	}
	
	//Predicate:
	//	SensorPredicate | PersonPredicate;
	public PredicateElements getPredicateAccess() {
		return pPredicate;
	}
	
	public ParserRule getPredicateRule() {
		return getPredicateAccess().getRule();
	}
	
	//Room:
	//	{Room}
	//	'Room'
	//	name=EString
	//	'{' (sensors+=Sensor ("," sensors+=Sensor)*)?
	//	'}';
	public RoomElements getRoomAccess() {
		return pRoom;
	}
	
	public ParserRule getRoomRule() {
		return getRoomAccess().getRule();
	}
	
	//Person:
	//	{Person}
	//	'Person'
	//	name=EString
	//	'{'
	//	'left-ankle' ankleLeft=Tag
	//	'right-ankle' ankleRight=Tag
	//	'belt' belt=Tag
	//	'chest' chest=Tag
	//	'}';
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//Tag:
	//	{Tag}
	//	'ID'
	//	name=EString;
	public TagElements getTagAccess() {
		return pTag;
	}
	
	public ParserRule getTagRule() {
		return getTagAccess().getRule();
	}
	
	//Pattern:
	//	{Pattern}
	//	'Pattern'
	//	name=EString
	//	'{' (rules+=Rule ("," rules+=Rule)*)?
	//	'}';
	public PatternElements getPatternAccess() {
		return pPattern;
	}
	
	public ParserRule getPatternRule() {
		return getPatternAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//AnalogSensor:
	//	{AnalogSensor}
	//	'AnalogSensor'
	//	name=EString;
	public AnalogSensorElements getAnalogSensorAccess() {
		return pAnalogSensor;
	}
	
	public ParserRule getAnalogSensorRule() {
		return getAnalogSensorAccess().getRule();
	}
	
	//DigitalSensor:
	//	{DigitalSensor}
	//	'DigitalSensor'
	//	name=EString;
	public DigitalSensorElements getDigitalSensorAccess() {
		return pDigitalSensor;
	}
	
	public ParserRule getDigitalSensorRule() {
		return getDigitalSensorAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//Rule:
	//	{Rule}
	//	'{' ('(' predicates+=Predicate ("and" predicates+=Predicate)* ')')? (('for' | 'since') duration=Duration)?
	//	'}';
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//Duration:
	//	{Duration} time=EInt precision=Precision;
	public DurationElements getDurationAccess() {
		return pDuration;
	}
	
	public ParserRule getDurationRule() {
		return getDurationAccess().getRule();
	}
	
	//SensorPredicate:
	//	{SensorPredicate} sensor=[Sensor|EString] operator=Operator value=EDouble;
	public SensorPredicateElements getSensorPredicateAccess() {
		return pSensorPredicate;
	}
	
	public ParserRule getSensorPredicateRule() {
		return getSensorPredicateAccess().getRule();
	}
	
	//PersonPredicate:
	//	{PersonPredicate} person=[Person|EString] 'is' activity=Activity;
	public PersonPredicateElements getPersonPredicateAccess() {
		return pPersonPredicate;
	}
	
	public ParserRule getPersonPredicateRule() {
		return getPersonPredicateAccess().getRule();
	}
	
	//enum Operator:
	//	superior='>' | inferior='<' | equal='=';
	public OperatorElements getOperatorAccess() {
		return eOperator;
	}
	
	public EnumRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}
	
	//enum Activity:
	//	standing | laying | sitting;
	public ActivityElements getActivityAccess() {
		return eActivity;
	}
	
	public EnumRule getActivityRule() {
		return getActivityAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//enum Precision:
	//	ms='millis' | s='seconds' | m='minutes';
	public PrecisionElements getPrecisionAccess() {
		return ePrecision;
	}
	
	public EnumRule getPrecisionRule() {
		return getPrecisionAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
