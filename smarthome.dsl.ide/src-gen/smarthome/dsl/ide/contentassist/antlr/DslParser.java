/*
 * generated by Xtext 2.14.0
 */
package smarthome.dsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import smarthome.dsl.ide.contentassist.antlr.internal.InternalDslParser;
import smarthome.dsl.services.DslGrammarAccess;

public class DslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getSensorAccess().getAlternatives(), "rule__Sensor__Alternatives");
			builder.put(grammarAccess.getPredicateAccess().getAlternatives(), "rule__Predicate__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
			builder.put(grammarAccess.getRuleAccess().getAlternatives_3_0(), "rule__Rule__Alternatives_3_0");
			builder.put(grammarAccess.getOperatorAccess().getAlternatives(), "rule__Operator__Alternatives");
			builder.put(grammarAccess.getActivityAccess().getAlternatives(), "rule__Activity__Alternatives");
			builder.put(grammarAccess.getPrecisionAccess().getAlternatives(), "rule__Precision__Alternatives");
			builder.put(grammarAccess.getHomeAccess().getGroup(), "rule__Home__Group__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_3(), "rule__Home__Group_3__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_4(), "rule__Home__Group_4__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_4_3(), "rule__Home__Group_4_3__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_5(), "rule__Home__Group_5__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_5_3(), "rule__Home__Group_5_3__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_6(), "rule__Home__Group_6__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_6_3(), "rule__Home__Group_6_3__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_7(), "rule__Home__Group_7__0");
			builder.put(grammarAccess.getHomeAccess().getGroup_7_2(), "rule__Home__Group_7_2__0");
			builder.put(grammarAccess.getRoomAccess().getGroup(), "rule__Room__Group__0");
			builder.put(grammarAccess.getRoomAccess().getGroup_4(), "rule__Room__Group_4__0");
			builder.put(grammarAccess.getRoomAccess().getGroup_4_1(), "rule__Room__Group_4_1__0");
			builder.put(grammarAccess.getPersonAccess().getGroup(), "rule__Person__Group__0");
			builder.put(grammarAccess.getTagAccess().getGroup(), "rule__Tag__Group__0");
			builder.put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_4(), "rule__Pattern__Group_4__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_4_1(), "rule__Pattern__Group_4_1__0");
			builder.put(grammarAccess.getAnalogSensorAccess().getGroup(), "rule__AnalogSensor__Group__0");
			builder.put(grammarAccess.getDigitalSensorAccess().getGroup(), "rule__DigitalSensor__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
			builder.put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
			builder.put(grammarAccess.getRuleAccess().getGroup_2(), "rule__Rule__Group_2__0");
			builder.put(grammarAccess.getRuleAccess().getGroup_2_2(), "rule__Rule__Group_2_2__0");
			builder.put(grammarAccess.getRuleAccess().getGroup_3(), "rule__Rule__Group_3__0");
			builder.put(grammarAccess.getDurationAccess().getGroup(), "rule__Duration__Group__0");
			builder.put(grammarAccess.getSensorPredicateAccess().getGroup(), "rule__SensorPredicate__Group__0");
			builder.put(grammarAccess.getPersonPredicateAccess().getGroup(), "rule__PersonPredicate__Group__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getHomeAccess().getFileEventsAssignment_3_1(), "rule__Home__FileEventsAssignment_3_1");
			builder.put(grammarAccess.getHomeAccess().getRoomsAssignment_4_2(), "rule__Home__RoomsAssignment_4_2");
			builder.put(grammarAccess.getHomeAccess().getRoomsAssignment_4_3_1(), "rule__Home__RoomsAssignment_4_3_1");
			builder.put(grammarAccess.getHomeAccess().getPersonsAssignment_5_2(), "rule__Home__PersonsAssignment_5_2");
			builder.put(grammarAccess.getHomeAccess().getPersonsAssignment_5_3_1(), "rule__Home__PersonsAssignment_5_3_1");
			builder.put(grammarAccess.getHomeAccess().getPatternsAssignment_6_2(), "rule__Home__PatternsAssignment_6_2");
			builder.put(grammarAccess.getHomeAccess().getPatternsAssignment_6_3_1(), "rule__Home__PatternsAssignment_6_3_1");
			builder.put(grammarAccess.getHomeAccess().getMonitoredEntitiesAssignment_7_1(), "rule__Home__MonitoredEntitiesAssignment_7_1");
			builder.put(grammarAccess.getHomeAccess().getMonitoredEntitiesAssignment_7_2_1(), "rule__Home__MonitoredEntitiesAssignment_7_2_1");
			builder.put(grammarAccess.getRoomAccess().getNameAssignment_2(), "rule__Room__NameAssignment_2");
			builder.put(grammarAccess.getRoomAccess().getSensorsAssignment_4_0(), "rule__Room__SensorsAssignment_4_0");
			builder.put(grammarAccess.getRoomAccess().getSensorsAssignment_4_1_1(), "rule__Room__SensorsAssignment_4_1_1");
			builder.put(grammarAccess.getPersonAccess().getNameAssignment_2(), "rule__Person__NameAssignment_2");
			builder.put(grammarAccess.getPersonAccess().getAnkleLeftAssignment_5(), "rule__Person__AnkleLeftAssignment_5");
			builder.put(grammarAccess.getPersonAccess().getAnkleRightAssignment_7(), "rule__Person__AnkleRightAssignment_7");
			builder.put(grammarAccess.getPersonAccess().getBeltAssignment_9(), "rule__Person__BeltAssignment_9");
			builder.put(grammarAccess.getPersonAccess().getChestAssignment_11(), "rule__Person__ChestAssignment_11");
			builder.put(grammarAccess.getTagAccess().getNameAssignment_2(), "rule__Tag__NameAssignment_2");
			builder.put(grammarAccess.getPatternAccess().getNameAssignment_2(), "rule__Pattern__NameAssignment_2");
			builder.put(grammarAccess.getPatternAccess().getRulesAssignment_4_0(), "rule__Pattern__RulesAssignment_4_0");
			builder.put(grammarAccess.getPatternAccess().getRulesAssignment_4_1_1(), "rule__Pattern__RulesAssignment_4_1_1");
			builder.put(grammarAccess.getAnalogSensorAccess().getNameAssignment_2(), "rule__AnalogSensor__NameAssignment_2");
			builder.put(grammarAccess.getDigitalSensorAccess().getNameAssignment_2(), "rule__DigitalSensor__NameAssignment_2");
			builder.put(grammarAccess.getRuleAccess().getPredicatesAssignment_2_1(), "rule__Rule__PredicatesAssignment_2_1");
			builder.put(grammarAccess.getRuleAccess().getPredicatesAssignment_2_2_1(), "rule__Rule__PredicatesAssignment_2_2_1");
			builder.put(grammarAccess.getRuleAccess().getDurationAssignment_3_1(), "rule__Rule__DurationAssignment_3_1");
			builder.put(grammarAccess.getDurationAccess().getTimeAssignment_1(), "rule__Duration__TimeAssignment_1");
			builder.put(grammarAccess.getDurationAccess().getPrecisionAssignment_2(), "rule__Duration__PrecisionAssignment_2");
			builder.put(grammarAccess.getSensorPredicateAccess().getSensorAssignment_1(), "rule__SensorPredicate__SensorAssignment_1");
			builder.put(grammarAccess.getSensorPredicateAccess().getOperatorAssignment_2(), "rule__SensorPredicate__OperatorAssignment_2");
			builder.put(grammarAccess.getSensorPredicateAccess().getValueAssignment_3(), "rule__SensorPredicate__ValueAssignment_3");
			builder.put(grammarAccess.getPersonPredicateAccess().getPersonAssignment_1(), "rule__PersonPredicate__PersonAssignment_1");
			builder.put(grammarAccess.getPersonPredicateAccess().getActivityAssignment_3(), "rule__PersonPredicate__ActivityAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DslGrammarAccess grammarAccess;

	@Override
	protected InternalDslParser createParser() {
		InternalDslParser result = new InternalDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
